/**
 *  DataType-FU
 *  Create JavaScript functions with built-in argument type detection.
 *
 *  Copyright 2014-2015, Marc S. Brooks (http://mbrooks.info)
 *  Licensed under the MIT license:
 *  http://www.opensource.org/licenses/mit-license.php
 */
eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('(2(h){7 k={};h.1c=2(e,f){3(!e R r){o p q(\'14 F 1b r V 12 1k W\');}3(!f R u){o p q(\'14 F a u 1i 1f 1g W w\');}7 g=f;f=2(){J(7 i=0;i<5.w;i++){7 a=5[i],v=e[i];3(8 v!==\'D\'){o p q(\'18 6 \'+v+\' 1d F a x\');}7 b=v.y(/\\|/),9=A;J(7 j=0;j<b.w;j++){7 c=b[j];3(!/^1e|Q|2|T|z|D|m|\\*$/i.1q(c)){o p q(\'1w 17 6 \'+c);}7 d;3(c==\'m\'){d=\'B\'}C 3(c==\'*\'){d=\'15\'}C{d=\'M\'+k.N(c)}3(k[d](a)!==O){9=c}C{9=A;1y}}3(9){o p q(\'1j "\'+k.P(g)[i]+\'" 1p V 6 \'+k.E(a)+\' M 1r 12.\\n\\n\'+9+\' 1x 16:\\n\'+k.S(g));}}4 g.19(1a,5)};4 f};k.U=2(){4(l.G.H.I(5[0])===\'[z r]\')};k.X=2(){4(8 5[0]===\'Q\')};k.Y=2(){4(l.G.H.I(5[0])===\'[z u]\')};k.Z=2(){4(8 5[0]===\'T\')};k.10=2(){4(l.G.H.I(5[0])===\'[z l]\')};k.11=2(){4(8 5[0]===\'D\')};k.B=2(){4(8 5[0]===\'m\')};k.15=2(){4(k.E(5[0]))?O:1l};k.E=2(){7 a=5[0],6=A;3(k.U(a)){6=\'r\'}3(k.X(a)){6=\'1m\'}3(k.Y(a)){6=\'u\'}3(k.Z(a)){6=\'1n\'}3(k.10(a)){6=\'l\'}3(k.11(a)){6=\'x\'}3(k.B(a)){6=\'m\'}4 6};k.P=2(){4 x(5[0]).y(\'\\n\')[0].1o(/2\\s\\((.+)\\)\\s{/,\'$1\').y(/\\s?,\\s?/)};k.S=2(){7 a=x(5[0]).y(\'\\n\'),K="";J(7 i=0;i<a.w;i++){K+=\'\\t\'+a[i]+\'\\n\'}4 K};k.N=2(a){4 a.1s().1t(0).1u()+a.1v(1)}})((8 L!==\'m\'&&L.13)?L.13:1h);',62,97,'||function|if|return|arguments|type|var|typeof|error||||||||||||Object|undefined||throw|new|Error|Array|||Function|val|length|String|split|object|null|isUndef|else|string|getDataType|be|prototype|toString|call|for|str|module|is|ucFirst|true|parseFuncArgs|boolean|instanceof|parseFuncReformat|number|isArray|of|types|isBoolean|isFunction|isNumber|isObject|isString|valid|exports|Must|isWildcard|in|data|Data|apply|this|an|fu|must|array|to|the|window|equal|Argument|JavaScript|false|Boolean|Number|replace|value|test|not|toLowerCase|charAt|toUpperCase|slice|Invalid|expected|break'.split('|'),0,{}));
