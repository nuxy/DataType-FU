/**
 *  DataType-FU
 *  Create JavaScript functions with built-in argument type detection
 *
 *  Copyright 2014, Marc S. Brooks (http://mbrooks.info)
 *  Licensed under the MIT license:
 *  http://www.opensource.org/licenses/mit-license.php
 */
eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('(3(e){7 f={};e.Y=3(b,c){6(!b B g){h j k(\'C o Z g D E 10 F\');}6(!c B l){h j k(\'C o a l 11 12 13 F p\');}7 d=c;c=3(){G(7 i=0;i<4.p;i++){7 a=4[i],2=f.H(b[i]);6(8 2!==\'I\'){h j k(\'14 2 \'+2+\' 15 o a m\');}6(!/^g|J|l|K|9|m|\\*$/.16(2)){h j k(\'17 18 2 \'+2);}2=(2==\'*\')?\'19\':2;6(f[\'L\'+2](a)!==M){h j k(\'1a "\'+f.N(d)[i]+\'" 1b D 2 \'+f.q(a)+\' L 1c E.\\n\\n\'+2+\' 1d 1e:\\n\'+f.O(d));}}5 d.1f(1g,4)};5 c};f.P=3(){5(9.r.u.v(4[0])===\'[w g]\')};f.Q=3(){5(8 4[0]===\'1h\')};f.R=3(){5(9.r.u.v(4[0])===\'[w l]\')};f.S=3(){5(8 4[0]===\'1i\')};f.T=3(){5(9.r.u.v(4[0])===\'[w 9]\')};f.U=3(){5(8 4[0]===\'I\')};f.V=3(){5(8 4[0]===\'x\')};f.1j=3(){5(f.q(4[0]))?M:1k};f.q=3(){7 a=4[0],2=W;6(f.P(a)){2=\'g\'}6(f.Q(a)){2=\'J\'}6(f.R(a)){2=\'l\'}6(f.S(a)){2=\'K\'}6(f.T(a)){2=\'9\'}6(f.U(a)){2=\'m\'}6(f.V(a)){2=\'x\'}5 2};f.N=3(){5 m(4[0]).y(\'\\n\')[0].1l(/3\\s\\((.+)\\)\\s{/,\'$1\').y(\',\')};f.O=3(){7 a=m(4[0]).y(\'\\n\'),z=W;G(7 i=0;i<a.p;i++){z+=\'\\t\'+a[i]+\'\\n\'}5 z};f.H=3(a){5 a.1m(0).1n()+a.1o(1)}})((8 A!==\'x\'&&A.X)?A.X:1p);',62,88,'||type|function|arguments|return|if|var|typeof|Object|||||||Array|throw||new|Error|Function|String||be|length|getDataType|prototype|||toString|call|object|undefined|split|str|module|instanceof|Must|of|valid|types|for|ucFirst|string|Boolean|Number|is|true|parseFuncArgs|parseFuncReformat|isArray|isBoolean|isFunction|isNumber|isObject|isString|isUndef|null|exports|fu|an|JavaScript|equal|to|the|Data|must|test|Invalid|data|Wildcard|Argument|value|not|expected|in|apply|this|boolean|number|isWildcard|false|replace|charAt|toUpperCase|slice|window'.split('|'),0,{}));
